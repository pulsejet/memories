name: Tests

on:
  push:
    branches:
      - master
      - citest

env:
  APP_NAME: memories

jobs:
  phpunit-mysql:
    runs-on: ubuntu-latest

    strategy:
      # do not stop on another job's failure
      fail-fast: false
      matrix:
        php-versions: ['7.4', '8.1']
        server-versions: ['v24.0.4']

    services:
      mysql:
        image: mariadb:10.5
        ports:
          - 4444:3306/tcp
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
        options: --health-cmd="mysqladmin ping" --health-interval 5s --health-timeout 2s --health-retries 5

      steps:
      #   - name: Enable ONLY_FULL_GROUP_BY MySQL option
      #     run: |
      #       echo "SET GLOBAL sql_mode=(SELECT CONCAT(@@sql_mode,',ONLY_FULL_GROUP_BY'));" | mysql -h 127.0.0.1 -P 4444 -u root -prootpassword
      #       echo "SELECT @@sql_mode;" | mysql -h 127.0.0.1 -P 4444 -u root -prootpassword

      - name: Checkout server
        uses: actions/checkout@v3
        with:
          submodules: true
          repository: nextcloud/server
          ref: ${{ matrix.server-versions }}

      - name: Checkout the app
        uses: actions/checkout@v3
        with:
          path: apps/${{ env.APP_NAME }}

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Build Vue
        working-directory: apps/${{ env.APP_NAME }}
        run: |
          make dev-setup
          make build-js-production

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit
          extensions: mbstring, iconv, fileinfo, intl, mysql, pdo_mysql
          coverage: none

      - name: Set up Nextcloud
        env:
          DB_PORT: 4444
        run: |
          mkdir data
          ./occ maintenance:install --verbose --database=mysql --database-name=nextcloud --database-host=127.0.0.1 --database-port=$DB_PORT --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass password
          ./occ app:enable --force ${{ env.APP_NAME }}
          ./occ config:system:set --type bool --value true debug
          php -S localhost:8080 &

      - name: Get test photos
        working-directory: data/admin/files
        run: |
          wget https://github.com/pulsejet/memories-test/raw/main/Files.zip
          unzip Files.zip

      - name: Run indexing
        run: |
          sudo apt-get install libimage-exiftool-perl -y
          ./occ files:scan --all
          ./occ memories:index

      - name: Run e2e tests
        working-directory: apps/${{ env.APP_NAME }}
        run: |
          sudo npx playwright install-deps chromium
          npm run e2e

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report-${{ matrix.php-versions }}-${{ matrix.server-versions }}
          path: apps/${{ env.APP_NAME }}/playwright-report

